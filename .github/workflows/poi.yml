name: poi

env:
  ACR: superawesome2.azurecr.io
  STAGING_URL: https://openhack95e8pkj0poi-staging.azurewebsites.net
  PROD_URL: https://openhack95e8pkj0poi.azurewebsites.net
  RG: openhack95e8pkj0rg
  WEBAPP_NAME: openhack95e8pkj0poi

on:
  push:
    branches:
      - '*'
    paths:
      - apis/poi/**
      - .github/workflows/poi.yml
  pull_request:
    branches:
      - '*'
    paths:
      - apis/poi/**
      - .github/workflows/poi.yml
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '3.1.202'
    - name: Add Code Coverage Tools
      working-directory: apis/poi/tests/UnitTests
      
      run: dotnet add package coverlet.msbuild
    - name: Install dependencies
      run: dotnet restore apis/poi/web/*.csproj

    - name: .NET Build Web
      run: dotnet build --configuration Release --no-restore apis/poi/web/*.csproj

    - name: .NET Build Unit Tests
      run: dotnet build --configuration Release apis/poi/tests/UnitTests/UnitTests.csproj

    - name: Docker Login
      run: docker login superawesome2.azurecr.io --username=${{SECRETS.CONTAINER_USER}} --password=${{SECRETS.CONTAINER_SECRET}}
    
    - name: Docker build
      working-directory: apis/poi/web
      run: docker build -t superawesome2.azurecr.io/mydriveway/api-poi:${{GITHUB.RUN_NUMBER}} .
      
    - name: Docker push
      run: docker push superawesome2.azurecr.io/mydriveway/api-poi:${{GITHUB.RUN_NUMBER}}

    - name: .NET Test
      run: dotnet test --no-restore --verbosity normal apis/poi/tests/UnitTests  /p:CollectCoverage=true /p:CoverletOutput=lcov/ /p:CoverletOutputFormat=lcov

    - name: Coveralls
      uses: coverallsapp/github-action@master
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        path-to-lcov: apis/poi/tests/UnitTests/lcov/coverage.info
        base-path: apis/poi
        flag-name: Unit

    - name: Login to Azure CLI
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
      
    - name : Deploy App Service 
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ env.WEBAPP_NAME }}
        images: "${{ env.ACR }}/mydriveway/api-userprofile:${{ github.run_number }}"
        # slot-name: staging